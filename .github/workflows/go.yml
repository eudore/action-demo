name: Run Tests
on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]
permissions:
  contents: read
defaults:
 run:
  working-directory: src/github.com/eudore/eudore/
jobs:
  test:
    strategy:
      max-parallel: 1
      matrix:
        os: [ubuntu-latest, macos-latest]
        go: ["1.18"]
        include:
          - os: ubuntu-latest
            gopath: /home/runner/go
            gocache: /home/runner/.cache/go-build
          - os: macos-latest
            gopath: /Users/runner/go
            gocache: /Users/runner/Library/Caches/go-build
    name: ${{ matrix.os }} @ Go ${{ matrix.go }}
    runs-on: ${{ matrix.os }}
    env:
      GO111MODULE: off
      GOPATH: ${{ matrix.gopath }}:${{ github.workspace }}
      CGO_ENABLED: 1
    steps:
      - uses: actions/checkout@v3
        with:
          path: src/github.com/eudore/eudore
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}
      - uses: actions/cache@v3
        with:
          path: |
            ${{ matrix.gopath }}
            ${{ matrix.gocache }}
          key: ${{ runner.os }}-go-${{ hashFiles('src/github.com/eudore/eudore/go.mod') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Run goget 
        run: |
          rm -f _example/logger_test.go
          for pkg in $(go list -json _example/*_test.go | jq -r '.XTestImports[]' | grep -E "github|monkey" | grep -v eudore); do go get -v $pkg; done
      - name: Run Tests
        run: go test -v -timeout=1m -race -cover -coverprofile=coverage.out -coverpkg='github.com/eudore/eudore,github.com/eudore/eudore/middleware' _example/*_test.go
