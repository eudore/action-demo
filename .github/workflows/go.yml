name: Run Tests
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
permissions:
  contents: read
jobs:
  test:
    strategy:
      max-parallel: 1
      matrix:
        os: [ubuntu-latest, macos-latest]
        go: ['1.18', '1.19', '1.20']
        include:
          - os: ubuntu-latest
            go-build: ~/.cache/go-build
          - os: macos-latest
            go-build: ~/Library/Caches/go-build
    name: ${{ matrix.os }} @ Go ${{ matrix.go }} ${{ matrix.test-tags }}
    runs-on: ${{ matrix.os }}
    env:
      WORKDIR: ~/go/src/github.com/eudore/eudore
      GOPATH2: $GITHUB_WORKSPACE:$GOPATH
      GO111MODULE: off
      CGO_ENABLED: 1
      GOPROXY: https://proxy.golang.org
    steps:
      - uses: actions/checkout@v3
        with:
          path: go/src/github.com/eudore/eudore
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go }}
      - uses: actions/cache@v3
        with:
          path: |
            ${{ matrix.go-build }}
            ~/go
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: get env
        run: |
          env
          go env
      - name: Run goget 
        run: |
          go get -v bou.ke/monkey
          go get -v github.com/gobwas/ws
          go get -v github.com/gobwas/ws/wsutil
          go get -v github.com/google/uuid
          echo  $GITHUB_WORKSPACE:$GOPATH
      - name: Run Tests
        run: go test -v -timeout=2m -race -cover -coverprofile=coverage.out -coverpkg='github.com/eudore/eudore,github.com/eudore/eudore/middleware' $WORKDIR/_example/*_test.go
